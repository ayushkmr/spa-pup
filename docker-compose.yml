services:
  postgres:
    container_name: puppy-spa-postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME:-puppy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-puppy_spa}
      POSTGRES_DB: ${DB_NAME:-puppy_spa}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - puppy-spa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U puppy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: puppy-spa-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@puppyspa.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    networks:
      - puppy-spa-network
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    container_name: puppy-spa-api
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${API_PORT:-3005}
      - HOST=0.0.0.0
      - CORS_ORIGIN=true
      - DATABASE_URL=${DATABASE_URL:-postgresql://puppy:puppy_spa@postgres:5432/puppy_spa?schema=public}
    expose:
      - "3005"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - puppy-spa-network
    command: >
      sh -c "npx prisma generate && npx prisma db push --force-reset && node dist/main"

  frontend:
    container_name: puppy-spa-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
      args:
        - NEXT_PUBLIC_API_URL=http://backend:3005
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_API_URL=http://backend:3005
    expose:
      - "3000"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - puppy-spa-network

  nginx:
    container_name: puppy-spa-nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - puppy-spa-network

volumes:
  postgres:
  pgadmin:

networks:
  puppy-spa-network:
